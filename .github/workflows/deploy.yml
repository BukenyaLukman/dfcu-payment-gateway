name: Deploy to Heroku

# ← triggers on every push to main
on:
  push:
    branches:
      - main

# ← expose your secrets to all steps
env:
  HEROKU_APP_NAME: ${{ secrets.HEROKU_APP_NAME }}
  HEROKU_API_KEY:  ${{ secrets.HEROKU_API_KEY }}
  CORS_ALLOWED_ORIGINS: ${{ secrets.CORS_ALLOWED_ORIGINS }}

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Create test env file
        run: |
          echo "DB_URL=jdbc:h2:mem:testdb" > .env
          echo "DB_USERNAME=sa" >> .env
          echo "DB_PASSWORD=" >> .env
          echo "CORS_ALLOWED_ORIGINS=http://localhost:3000" >> .env

      - name: Run tests
        run: mvn clean test

  deploy:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Install Heroku CLI
        run: |
          curl https://cli-assets.heroku.com/install-ubuntu.sh | sh

      - name: Login to Heroku Container Registry
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: heroku container:login

      - name: Set Heroku stack to container
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
          HEROKU_APP_NAME: ${{ secrets.HEROKU_APP_NAME }}
        run: heroku stack:set container --app $HEROKU_APP_NAME

      - name: Push Docker container
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
          HEROKU_APP_NAME: ${{ secrets.HEROKU_APP_NAME }}
        run: heroku container:push web --app $HEROKU_APP_NAME

      - name: Release
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
          HEROKU_APP_NAME: ${{ secrets.HEROKU_APP_NAME }}
        run: heroku container:release web --app $HEROKU_APP_NAME